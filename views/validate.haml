-if @alert.valid?
  #result.alert.alert-block.alert-success
    %h2.alert-heading Your CAP Document Is Valid!
    %p The document you submitted has been validated as CAP #{ @alert.class::CAP_VERSION }.
- else
  #result.alert.alert-block.alert-error
    %h2.alert-heading Your CAP Document Is Not Valid!
    %p Validation errors will be listed in the Errors tab.


#tabs
  %ul
    %li 
      %a{ :href => '#info_tab' }Alert Information
    %li
      %a{ :href => '#xml_tab' }Exported CAP XML
    - if !@alert.valid?
      %li
        %a{ :href => "#errors_tab"}Errors


  #info_tab
    - polygons_present = @alert.infos.any?{ |info| info.areas.any?{ |area| area.polygons.any?{ |polygon| polygon.points.size > 0 }}}
    - circles_present = @alert.infos.any?{ |info| info.areas.any?{ |area| area.circles.any? }}
    - map_required = polygons_present || circles_present

    - if map_required
      %h2 Alert Map
      %p 
        %strong 
          Click on the highlighted area for further alerting information
      #map
      %script{ :type => 'text/javascript' }
        var polygonsData = [
        = @alert.infos.map{ |info| info.areas.map{ |area| area.polygons.any? ? { 'description' => haml( :area_popup, :locals => { :alert => @alert, :info => info, :area => area }), 'polygons' => area.polygons.map( &:points ).map{ |points| points.map{ |point| [ point.longitude, point.lattitude ]}}}.to_json : nil }}.flatten.compact.join(',')
        ];

        var circlesData = [
        = @alert.infos.map{ |info| info.areas.map{ |area| area.circles.any? ? { 'description' => haml( :area_popup, :locals => { :alert => @alert, :info => info, :area => area }), 'circles' => area.circles.map{ |circle| [ circle.longitude, circle.lattitude, circle.radius ]}}.to_json : nil }}.flatten.compact.join(',')
        ];

      :javascript
        $( document ).ready( build_map );
    - else
      %h2 Alert Details
      - @alert.infos.each do |info|
        - info.areas.each do |area|
          = haml( :area_popup, :locals => { :alert => @alert, :info => info, :area => area })

  #xml_tab
    %h2 Exported CAP XML
    %p Below is a formatted version of the original CAP Alert.
    ~ CodeRay.scan( @xml_string, :xml).div

  - if !@alert.valid? 
    #errors_tab
      %h2 Validation Errors
      %h3 Alert
      %ul
        - @alert.errors.full_messages.each do |error|
          %li= error
      - @alert.infos.each do |info|
        - if info.errors.full_messages.any?
          %h4 Info
          %ul
            - info.errors.full_messages.each do |error|
              %li= error
          - info.event_codes.each do |event_code|
            - if event_code.errors.full_messages.any?
              %h5 Event Code
              %ul
                - event_code.errors.full_messages.each do |error|
                  %li= error
          - info.parameters.each do |parameter|
            - if parameter.errors.full_messages.any?
              %h5 Parameter
              %ul
                - parameter.errors.full_messages.each do |error|
                  %li= error
          - info.resources.each do |resource|
            - if resource.errors.full_messages.any?
              %h5 Resource
              %ul
                - resource.errors.full_messages.each do |error|
                  %li= error
          - info.areas.each do |area|
            - if area.errors.full_messages.any?
              %h5 Area
              %ul
                - area.errors.full_messages.each do |error|
                  %li= error

:javascript
  $(document).ready( function(){
    $('#tabs').tabs();
  });

= haml( :form )
