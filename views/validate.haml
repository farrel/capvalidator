#result
  %h2.valid Your CAP Document Is Valid!

  %p.valid
    The document you submitted has been validated as CAP
    = @alert.class::CAP_VERSION

#tabs
  %ul
    %li
      %a{ :href => '#original_tab'}Original CAP XML
    - if @alert.valid?
      %li
        %a{ :href => '#xml_tab' }Exported CAP XML
      %li 
        %a{ :href => '#info_tab' }Alert Information
    - else
      %li
        %a{ :href => '#errors_tab' }Errors

  #original_tab
    %form{ :action => '/validate', :method => 'post' } 
      %textarea{ :name => 'cap_data', :rows => 25, :cols => 80 }
        ~ params[ :cap_data ]
      %p
        %input#validate_button{ :type => "submit", :value => "Validate" }
        %a#clear_button{ href: "/" }
          Clear
  #xml_tab
    ~ CodeRay.scan( @xml_string, :xml).div( :line_numbers => :table )


  #info_tab
    - polygons_present = @alert.infos.any?{ |info| info.areas.any?{ |area| area.polygons.any? }}
    - circles_present = @alert.infos.any?{ |info| info.areas.any?{ |area| area.circles.any? }}
    - map_required = polygons_present || circles_present

    - if map_required
      %p Click on affected area for alerting information
      #map
      %script{ :type => 'text/javascript' }
        var polygonsData = [
        = @alert.infos.map{ |info| info.areas.map{ |area| area.polygons.any? ? { 'description' => haml( :area_popup, :locals => { :alert => @alert, :info => info, :area => area }), 'polygons' => area.polygons.map( &:points ).map{ |points| points.map{ |point| [ point.longitude, point.lattitude ]}}}.to_json : nil }}.flatten.compact.join(',')
        ];

        var circlesData = [
        = @alert.infos.map{ |info| info.areas.map{ |area| area.circles.any? ? { 'description' => haml( :area_popup, :locals => { :alert => @alert, :info => info, :area => area }), 'circles' => area.circles.map{ |circle| [ circle.longitude, circle.lattitude, circle.radius ]}}.to_json : nil }}.flatten.compact.join(',')
        ];

      :javascript
        $( document ).ready( build_map );
    - else
      - @alert.infos.each do |info|
        - info.areas.each do |area|
          = haml( :area_popup, :locals => { :alert => @alert, :info => info, :area => area })
